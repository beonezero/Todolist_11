"use strict";(self.webpackChunkit_incubator_todolist_ts=self.webpackChunkit_incubator_todolist_ts||[]).push([[146],{"./node_modules/@storybook/addon-actions/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{aD:function(){return chunk_AY7I2SME.aD}});var chunk_AY7I2SME=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/Task.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TaskIsDoneStory:function(){return TaskIsDoneStory},TaskIsNoteDoneStory:function(){return TaskIsNoteDoneStory},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Task_stories}});var _TaskIsDoneStory$para,_TaskIsDoneStory$para2,_TaskIsDoneStory$para3,_TaskIsNoteDoneStory$,_TaskIsNoteDoneStory$2,_TaskIsNoteDoneStory$3,objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react=__webpack_require__("./node_modules/react/index.js"),Checkbox=__webpack_require__("./node_modules/@mui/material/esm/Checkbox/Checkbox.js"),IconButton=__webpack_require__("./node_modules/@mui/material/esm/IconButton/IconButton.js"),EditableSpan=__webpack_require__("./src/EditableSpan.tsx"),Delete=__webpack_require__("./node_modules/@mui/icons-material/esm/Delete.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Task_stories={title:"TODOLISTS/Task",component:(0,react.memo)((function(_ref){var task=_ref.task,changeTaskStatus=_ref.changeTaskStatus,changeTaskTitle=_ref.changeTaskTitle,removeTask=_ref.removeTask;return(0,jsx_runtime.jsxs)("div",{className:task.isDone?"is-done":"",children:[(0,jsx_runtime.jsx)(Checkbox.Z,{checked:task.isDone,color:"primary",onChange:function onChangeHandler(e){var newIsDoneValue=e.currentTarget.checked;changeTaskStatus(task.id,newIsDoneValue)}}),(0,jsx_runtime.jsx)(EditableSpan.m,{value:task.title,onChange:function onTitleChangeHandler(newValue){changeTaskTitle(task.id,newValue)}}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:function onClickHandler(){return removeTask(task.id)},children:(0,jsx_runtime.jsx)(Delete.Z,{})})]})})),parameters:{layout:"centered"},tags:["autodocs"],args:{task:{id:"fsfsfs",title:"JS",isDone:!0},changeTaskStatus:(0,dist.aD)("changeTaskStatus"),changeTaskTitle:(0,dist.aD)("changeTaskTitle"),removeTask:(0,dist.aD)("removeTask")}},TaskIsDoneStory={args:{}},TaskIsNoteDoneStory={args:{task:{id:"fsfsfs2",title:"CSS",isDone:!1}}};TaskIsDoneStory.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},TaskIsDoneStory.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_TaskIsDoneStory$para=TaskIsDoneStory.parameters)||void 0===_TaskIsDoneStory$para?void 0:_TaskIsDoneStory$para.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {}\n}"},null===(_TaskIsDoneStory$para2=TaskIsDoneStory.parameters)||void 0===_TaskIsDoneStory$para2||null===(_TaskIsDoneStory$para3=_TaskIsDoneStory$para2.docs)||void 0===_TaskIsDoneStory$para3?void 0:_TaskIsDoneStory$para3.source)})}),TaskIsNoteDoneStory.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},TaskIsNoteDoneStory.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_TaskIsNoteDoneStory$=TaskIsNoteDoneStory.parameters)||void 0===_TaskIsNoteDoneStory$?void 0:_TaskIsNoteDoneStory$.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  args: {\n    task: {\n      id: "fsfsfs2",\n      title: "CSS",\n      isDone: false\n    }\n  }\n}'},null===(_TaskIsNoteDoneStory$2=TaskIsNoteDoneStory.parameters)||void 0===_TaskIsNoteDoneStory$2||null===(_TaskIsNoteDoneStory$3=_TaskIsNoteDoneStory$2.docs)||void 0===_TaskIsNoteDoneStory$3?void 0:_TaskIsNoteDoneStory$3.source)})});var __namedExportsOrder=["TaskIsDoneStory","TaskIsNoteDoneStory"]},"./src/EditableSpan.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{m:function(){return EditableSpan}});var _Users_neakhai_Documents_Yauheni_it_incubator_it_incubator_todolist_ts_11_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/esm/TextField/TextField.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),EditableSpan=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)((function(props){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState2=(0,_Users_neakhai_Documents_Yauheni_it_incubator_it_incubator_todolist_ts_11_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.value),_useState4=(0,_Users_neakhai_Documents_Yauheni_it_incubator_it_incubator_todolist_ts_11_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState3,2),title=_useState4[0],setTitle=_useState4[1];return editMode?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{value:title,onChange:function changeTitle(e){setTitle(e.currentTarget.value)},autoFocus:!0,onBlur:function activateViewMode(){setEditMode(!1),props.onChange(title)}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{onDoubleClick:function activateEditMode(){setEditMode(!0),setTitle(props.value)},children:props.value})}));try{EditableSpan.displayName="EditableSpan",EditableSpan.__docgenInfo={description:"",displayName:"EditableSpan",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(newValue: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EditableSpan.tsx#EditableSpan"]={docgenInfo:EditableSpan.__docgenInfo,name:"EditableSpan",path:"src/EditableSpan.tsx#EditableSpan"})}catch(__react_docgen_typescript_loader_error){}}}]);